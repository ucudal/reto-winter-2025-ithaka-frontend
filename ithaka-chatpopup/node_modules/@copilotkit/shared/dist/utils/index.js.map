{"version":3,"sources":["../../src/utils/index.ts","../../src/utils/conditions.ts","../../src/utils/errors.ts","../../package.json","../../src/index.ts","../../src/utils/json-schema.ts","../../src/utils/random-id.ts"],"sourcesContent":["export * from \"./conditions\";\nexport * from \"./errors\";\nexport * from \"./json-schema\";\nexport * from \"./random-id\";\n\n/**\n * Safely parses a JSON string into an object\n * @param json The JSON string to parse\n * @param fallback Optional fallback value to return if parsing fails. If not provided or set to \"unset\", returns null\n * @returns The parsed JSON object, or the fallback value (or null) if parsing fails\n */\nexport function parseJson(json: string, fallback: any = \"unset\") {\n  try {\n    return JSON.parse(json);\n  } catch (e) {\n    return fallback === \"unset\" ? null : fallback;\n  }\n}\n\n/**\n * Maps an array of items to a new array, skipping items that throw errors during mapping\n * @param items The array to map\n * @param callback The mapping function to apply to each item\n * @returns A new array containing only the successfully mapped items\n */\nexport function tryMap<TItem, TMapped>(\n  items: TItem[],\n  callback: (item: TItem, index: number, array: TItem[]) => TMapped,\n): TMapped[] {\n  return items.reduce<TMapped[]>((acc, item, index, array) => {\n    try {\n      acc.push(callback(item, index, array));\n    } catch (error) {\n      console.error(error);\n    }\n    return acc;\n  }, []);\n}\n\n/**\n * Checks if the current environment is macOS\n * @returns {boolean} True if running on macOS, false otherwise\n */\nexport function isMacOS(): boolean {\n  return /Mac|iMac|Macintosh/i.test(navigator.userAgent);\n}\n","export type ComparisonRule =\n  | \"EQUALS\"\n  | \"NOT_EQUALS\"\n  | \"GREATER_THAN\"\n  | \"LESS_THAN\"\n  | \"CONTAINS\"\n  | \"NOT_CONTAINS\"\n  | \"MATCHES\"\n  | \"STARTS_WITH\"\n  | \"ENDS_WITH\";\nexport type LogicalRule = \"AND\" | \"OR\" | \"NOT\";\nexport type ExistenceRule = \"EXISTS\" | \"NOT_EXISTS\";\n\nexport type Rule = ComparisonRule | LogicalRule | ExistenceRule;\n\nexport interface BaseCondition {\n  rule: Rule;\n  path?: string;\n}\n\nexport interface ComparisonCondition extends BaseCondition {\n  rule: ComparisonRule;\n  value: any;\n}\n\nexport interface LogicalCondition extends BaseCondition {\n  rule: LogicalRule;\n  conditions: Condition[];\n}\n\nexport interface ExistenceCondition extends BaseCondition {\n  rule: ExistenceRule;\n}\n\nexport type Condition = ComparisonCondition | LogicalCondition | ExistenceCondition;\n\nexport function executeConditions({\n  conditions,\n  value,\n}: {\n  conditions?: Condition[];\n  value: any;\n}): boolean {\n  // If no conditions, consider it a pass\n  if (!conditions?.length) return true;\n\n  // Run all conditions (implicit AND)\n  return conditions.every((condition) => executeCondition(condition, value));\n}\n\nfunction executeCondition(condition: Condition, value: any): boolean {\n  const targetValue = condition.path ? getValueFromPath(value, condition.path) : value;\n\n  switch (condition.rule) {\n    // Logical\n    case \"AND\":\n      return (condition as LogicalCondition).conditions.every((c) => executeCondition(c, value));\n    case \"OR\":\n      return (condition as LogicalCondition).conditions.some((c) => executeCondition(c, value));\n    case \"NOT\":\n      return !(condition as LogicalCondition).conditions.every((c) => executeCondition(c, value));\n\n    // Comparison\n    case \"EQUALS\":\n      return targetValue === (condition as ComparisonCondition).value;\n    case \"NOT_EQUALS\":\n      return targetValue !== (condition as ComparisonCondition).value;\n    case \"GREATER_THAN\":\n      return targetValue > (condition as ComparisonCondition).value;\n    case \"LESS_THAN\":\n      return targetValue < (condition as ComparisonCondition).value;\n    case \"CONTAINS\":\n      return (\n        Array.isArray(targetValue) && targetValue.includes((condition as ComparisonCondition).value)\n      );\n    case \"NOT_CONTAINS\":\n      return (\n        Array.isArray(targetValue) &&\n        !targetValue.includes((condition as ComparisonCondition).value)\n      );\n    case \"MATCHES\":\n      return new RegExp((condition as ComparisonCondition).value).test(String(targetValue));\n    case \"STARTS_WITH\":\n      return String(targetValue).startsWith((condition as ComparisonCondition).value);\n    case \"ENDS_WITH\":\n      return String(targetValue).endsWith((condition as ComparisonCondition).value);\n\n    // Existence\n    case \"EXISTS\":\n      return targetValue !== undefined && targetValue !== null;\n    case \"NOT_EXISTS\":\n      return targetValue === undefined || targetValue === null;\n  }\n}\n\nfunction getValueFromPath(obj: any, path: string): any {\n  return path.split(\".\").reduce((acc, part) => acc?.[part], obj);\n}\n","import { GraphQLError } from \"graphql\";\nimport { COPILOTKIT_VERSION } from \"../index\";\n\nexport enum Severity {\n  CRITICAL = \"critical\", // Critical errors that block core functionality\n  WARNING = \"warning\", // Configuration/setup issues that need attention\n  INFO = \"info\", // General errors and network issues\n}\n\nexport enum ErrorVisibility {\n  BANNER = \"banner\", // Critical errors shown as fixed banners\n  TOAST = \"toast\", // Regular errors shown as dismissible toasts\n  SILENT = \"silent\", // Errors logged but not shown to user\n  DEV_ONLY = \"dev_only\", // Errors only shown in development mode\n}\n\nexport const ERROR_NAMES = {\n  COPILOT_ERROR: \"CopilotError\",\n  COPILOT_API_DISCOVERY_ERROR: \"CopilotApiDiscoveryError\",\n  COPILOT_REMOTE_ENDPOINT_DISCOVERY_ERROR: \"CopilotKitRemoteEndpointDiscoveryError\",\n  COPILOT_KIT_AGENT_DISCOVERY_ERROR: \"CopilotKitAgentDiscoveryError\",\n  COPILOT_KIT_LOW_LEVEL_ERROR: \"CopilotKitLowLevelError\",\n  COPILOT_KIT_VERSION_MISMATCH_ERROR: \"CopilotKitVersionMismatchError\",\n  RESOLVED_COPILOT_KIT_ERROR: \"ResolvedCopilotKitError\",\n  CONFIGURATION_ERROR: \"ConfigurationError\",\n  MISSING_PUBLIC_API_KEY_ERROR: \"MissingPublicApiKeyError\",\n  UPGRADE_REQUIRED_ERROR: \"UpgradeRequiredError\",\n} as const;\n\n// Banner errors - critical configuration/discovery issues\nexport const BANNER_ERROR_NAMES = [\n  ERROR_NAMES.CONFIGURATION_ERROR,\n  ERROR_NAMES.MISSING_PUBLIC_API_KEY_ERROR,\n  ERROR_NAMES.UPGRADE_REQUIRED_ERROR,\n  ERROR_NAMES.COPILOT_API_DISCOVERY_ERROR,\n  ERROR_NAMES.COPILOT_REMOTE_ENDPOINT_DISCOVERY_ERROR,\n  ERROR_NAMES.COPILOT_KIT_AGENT_DISCOVERY_ERROR,\n];\n\n// Legacy cloud error names for backward compatibility\nexport const COPILOT_CLOUD_ERROR_NAMES = BANNER_ERROR_NAMES;\n\nexport enum CopilotKitErrorCode {\n  NETWORK_ERROR = \"NETWORK_ERROR\",\n  NOT_FOUND = \"NOT_FOUND\",\n  AGENT_NOT_FOUND = \"AGENT_NOT_FOUND\",\n  API_NOT_FOUND = \"API_NOT_FOUND\",\n  REMOTE_ENDPOINT_NOT_FOUND = \"REMOTE_ENDPOINT_NOT_FOUND\",\n  AUTHENTICATION_ERROR = \"AUTHENTICATION_ERROR\",\n  MISUSE = \"MISUSE\",\n  UNKNOWN = \"UNKNOWN\",\n  VERSION_MISMATCH = \"VERSION_MISMATCH\",\n  CONFIGURATION_ERROR = \"CONFIGURATION_ERROR\",\n  MISSING_PUBLIC_API_KEY_ERROR = \"MISSING_PUBLIC_API_KEY_ERROR\",\n  UPGRADE_REQUIRED_ERROR = \"UPGRADE_REQUIRED_ERROR\",\n}\n\nconst BASE_URL = \"https://docs.copilotkit.ai\";\n\nconst getSeeMoreMarkdown = (link: string) => `See more: [${link}](${link})`;\n\nexport const ERROR_CONFIG = {\n  [CopilotKitErrorCode.NETWORK_ERROR]: {\n    statusCode: 503,\n    troubleshootingUrl: `${BASE_URL}/troubleshooting/common-issues#i-am-getting-a-network-errors--api-not-found`,\n    visibility: ErrorVisibility.BANNER,\n    severity: Severity.CRITICAL,\n  },\n  [CopilotKitErrorCode.NOT_FOUND]: {\n    statusCode: 404,\n    troubleshootingUrl: `${BASE_URL}/troubleshooting/common-issues#i-am-getting-a-network-errors--api-not-found`,\n    visibility: ErrorVisibility.BANNER,\n    severity: Severity.CRITICAL,\n  },\n  [CopilotKitErrorCode.AGENT_NOT_FOUND]: {\n    statusCode: 500,\n    troubleshootingUrl: `${BASE_URL}/coagents/troubleshooting/common-issues#i-am-getting-agent-not-found-error`,\n    visibility: ErrorVisibility.BANNER,\n    severity: Severity.CRITICAL,\n  },\n  [CopilotKitErrorCode.API_NOT_FOUND]: {\n    statusCode: 404,\n    troubleshootingUrl: `${BASE_URL}/troubleshooting/common-issues#i-am-getting-a-network-errors--api-not-found`,\n    visibility: ErrorVisibility.BANNER,\n    severity: Severity.CRITICAL,\n  },\n  [CopilotKitErrorCode.REMOTE_ENDPOINT_NOT_FOUND]: {\n    statusCode: 404,\n    troubleshootingUrl: `${BASE_URL}/troubleshooting/common-issues#i-am-getting-copilotkits-remote-endpoint-not-found-error`,\n    visibility: ErrorVisibility.BANNER,\n    severity: Severity.CRITICAL,\n  },\n  [CopilotKitErrorCode.AUTHENTICATION_ERROR]: {\n    statusCode: 401,\n    troubleshootingUrl: `${BASE_URL}/troubleshooting/common-issues#authentication-errors`,\n    visibility: ErrorVisibility.BANNER,\n    severity: Severity.CRITICAL,\n  },\n  [CopilotKitErrorCode.MISUSE]: {\n    statusCode: 400,\n    troubleshootingUrl: null,\n    visibility: ErrorVisibility.DEV_ONLY,\n    severity: Severity.WARNING,\n  },\n  [CopilotKitErrorCode.UNKNOWN]: {\n    statusCode: 500,\n    visibility: ErrorVisibility.TOAST,\n    severity: Severity.CRITICAL,\n  },\n  [CopilotKitErrorCode.CONFIGURATION_ERROR]: {\n    statusCode: 400,\n    troubleshootingUrl: null,\n    severity: Severity.WARNING,\n    visibility: ErrorVisibility.BANNER,\n  },\n  [CopilotKitErrorCode.MISSING_PUBLIC_API_KEY_ERROR]: {\n    statusCode: 400,\n    troubleshootingUrl: null,\n    severity: Severity.CRITICAL,\n    visibility: ErrorVisibility.BANNER,\n  },\n  [CopilotKitErrorCode.UPGRADE_REQUIRED_ERROR]: {\n    statusCode: 402,\n    troubleshootingUrl: null,\n    severity: Severity.WARNING,\n    visibility: ErrorVisibility.BANNER,\n  },\n  [CopilotKitErrorCode.VERSION_MISMATCH]: {\n    statusCode: 400,\n    troubleshootingUrl: null,\n    visibility: ErrorVisibility.DEV_ONLY,\n    severity: Severity.INFO,\n  },\n};\n\nexport class CopilotKitError extends GraphQLError {\n  code: CopilotKitErrorCode;\n  statusCode: number;\n  severity?: Severity;\n  visibility: ErrorVisibility;\n\n  constructor({\n    message = \"Unknown error occurred\",\n    code,\n    severity,\n    visibility,\n  }: {\n    message?: string;\n    code: CopilotKitErrorCode;\n    severity?: Severity;\n    visibility?: ErrorVisibility;\n  }) {\n    const name = ERROR_NAMES.COPILOT_ERROR;\n    const config = ERROR_CONFIG[code];\n    const { statusCode } = config;\n    const resolvedVisibility = visibility ?? config.visibility ?? ErrorVisibility.TOAST;\n    const resolvedSeverity = severity ?? (\"severity\" in config ? config.severity : undefined);\n\n    super(message, {\n      extensions: {\n        name,\n        statusCode,\n        code,\n        visibility: resolvedVisibility,\n        severity: resolvedSeverity,\n        troubleshootingUrl: \"troubleshootingUrl\" in config ? config.troubleshootingUrl : null,\n        originalError: {\n          message,\n          stack: new Error().stack,\n        },\n      },\n    });\n\n    this.code = code;\n    this.name = name;\n    this.statusCode = statusCode;\n    this.severity = resolvedSeverity;\n    this.visibility = resolvedVisibility;\n  }\n}\n\n/**\n * Error thrown when we can identify wrong usage of our components.\n * This helps us notify the developer before real errors can happen\n *\n * @extends CopilotKitError\n */\nexport class CopilotKitMisuseError extends CopilotKitError {\n  constructor({\n    message,\n    code = CopilotKitErrorCode.MISUSE,\n  }: {\n    message: string;\n    code?: CopilotKitErrorCode;\n  }) {\n    const docsLink =\n      \"troubleshootingUrl\" in ERROR_CONFIG[code] && ERROR_CONFIG[code].troubleshootingUrl\n        ? getSeeMoreMarkdown(ERROR_CONFIG[code].troubleshootingUrl as string)\n        : null;\n    const finalMessage = docsLink ? `${message}.\\n\\n${docsLink}` : message;\n    super({ message: finalMessage, code });\n    this.name = ERROR_NAMES.COPILOT_API_DISCOVERY_ERROR;\n  }\n}\n\nconst getVersionMismatchErrorMessage = ({\n  reactCoreVersion,\n  runtimeVersion,\n  runtimeClientGqlVersion,\n}: VersionMismatchResponse) =>\n  `Version mismatch detected: @copilotkit/runtime@${runtimeVersion ?? \"\"} is not compatible with @copilotkit/react-core@${reactCoreVersion} and @copilotkit/runtime-client-gql@${runtimeClientGqlVersion}. Please ensure all installed copilotkit packages are on the same version.`;\n/**\n * Error thrown when CPK versions does not match\n *\n * @extends CopilotKitError\n */\nexport class CopilotKitVersionMismatchError extends CopilotKitError {\n  constructor({\n    reactCoreVersion,\n    runtimeVersion,\n    runtimeClientGqlVersion,\n  }: VersionMismatchResponse) {\n    const code = CopilotKitErrorCode.VERSION_MISMATCH;\n    super({\n      message: getVersionMismatchErrorMessage({\n        reactCoreVersion,\n        runtimeVersion,\n        runtimeClientGqlVersion,\n      }),\n      code,\n    });\n    this.name = ERROR_NAMES.COPILOT_KIT_VERSION_MISMATCH_ERROR;\n  }\n}\n\n/**\n * Error thrown when the CopilotKit API endpoint cannot be discovered or accessed.\n * This typically occurs when:\n * - The API endpoint URL is invalid or misconfigured\n * - The API service is not running at the expected location\n * - There are network/firewall issues preventing access\n *\n * @extends CopilotKitError\n */\nexport class CopilotKitApiDiscoveryError extends CopilotKitError {\n  constructor(\n    params: {\n      message?: string;\n      code?: CopilotKitErrorCode.API_NOT_FOUND | CopilotKitErrorCode.REMOTE_ENDPOINT_NOT_FOUND;\n      url?: string;\n    } = {},\n  ) {\n    const url = params.url ?? \"\";\n    let operationSuffix = \"\";\n    if (url?.includes(\"/info\")) operationSuffix = `when fetching CopilotKit info`;\n    else if (url.includes(\"/actions/execute\"))\n      operationSuffix = `when attempting to execute actions.`;\n    else if (url.includes(\"/agents/state\")) operationSuffix = `when attempting to get agent state.`;\n    else if (url.includes(\"/agents/execute\"))\n      operationSuffix = `when attempting to execute agent(s).`;\n    const message =\n      params.message ??\n      (params.url\n        ? `Failed to find CopilotKit API endpoint at url ${params.url} ${operationSuffix}`\n        : `Failed to find CopilotKit API endpoint.`);\n    const code = params.code ?? CopilotKitErrorCode.API_NOT_FOUND;\n    const errorMessage = `${message}.\\n\\n${getSeeMoreMarkdown(ERROR_CONFIG[code].troubleshootingUrl)}`;\n    super({ message: errorMessage, code });\n    this.name = ERROR_NAMES.COPILOT_API_DISCOVERY_ERROR;\n  }\n}\n\n/**\n * This error is used for endpoints specified in runtime's remote endpoints. If they cannot be contacted\n * This typically occurs when:\n * - The API endpoint URL is invalid or misconfigured\n * - The API service is not running at the expected location\n *\n * @extends CopilotKitApiDiscoveryError\n */\nexport class CopilotKitRemoteEndpointDiscoveryError extends CopilotKitApiDiscoveryError {\n  constructor(params?: { message?: string; url?: string }) {\n    const message =\n      params?.message ??\n      (params?.url\n        ? `Failed to find or contact remote endpoint at url ${params.url}`\n        : \"Failed to find or contact remote endpoint\");\n    const code = CopilotKitErrorCode.REMOTE_ENDPOINT_NOT_FOUND;\n    super({ message, code });\n    this.name = ERROR_NAMES.COPILOT_REMOTE_ENDPOINT_DISCOVERY_ERROR;\n  }\n}\n\n/**\n * Error thrown when a LangGraph agent cannot be found or accessed.\n * This typically occurs when:\n * - The specified agent name does not exist in the deployment\n * - The agent configuration is invalid or missing\n * - The agent service is not properly deployed or initialized\n *\n * @extends CopilotKitError\n */\nexport class CopilotKitAgentDiscoveryError extends CopilotKitError {\n  constructor(params: { agentName?: string; availableAgents: { name: string; id: string }[] }) {\n    const { agentName, availableAgents } = params;\n    const code = CopilotKitErrorCode.AGENT_NOT_FOUND;\n\n    const seeMore = getSeeMoreMarkdown(ERROR_CONFIG[code].troubleshootingUrl);\n    let message;\n\n    if (availableAgents.length) {\n      const agentList = availableAgents.map((agent) => agent.name).join(\", \");\n\n      if (agentName) {\n        message = `Agent '${agentName}' was not found. Available agents are: ${agentList}. Please verify the agent name in your configuration and ensure it matches one of the available agents.\\n\\n${seeMore}`;\n      } else {\n        message = `The requested agent was not found. Available agents are: ${agentList}. Please verify the agent name in your configuration and ensure it matches one of the available agents.\\n\\n${seeMore}`;\n      }\n    } else {\n      message = `${agentName ? `Agent '${agentName}'` : \"The requested agent\"} was not found. Please set up at least one agent before proceeding. ${seeMore}`;\n    }\n\n    super({ message, code });\n    this.name = ERROR_NAMES.COPILOT_KIT_AGENT_DISCOVERY_ERROR;\n  }\n}\n\n/**\n * Handles low-level networking errors that occur before a request reaches the server.\n * These errors arise from issues in the underlying communication infrastructure rather than\n * application-level logic or server responses. Typically used to handle \"fetch failed\" errors\n * where no HTTP status code is available.\n *\n * Common scenarios include:\n * - Connection failures (ECONNREFUSED) when server is down/unreachable\n * - DNS resolution failures (ENOTFOUND) when domain can't be resolved\n * - Timeouts (ETIMEDOUT) when request takes too long\n * - Protocol/transport layer errors like SSL/TLS issues\n */\nexport class CopilotKitLowLevelError extends CopilotKitError {\n  constructor({ error, url, message }: { error: Error; url: string; message?: string }) {\n    let code = CopilotKitErrorCode.NETWORK_ERROR;\n\n    // @ts-expect-error -- code may exist\n    const errorCode = error.code as string;\n    const errorMessage = message ?? resolveLowLevelErrorMessage({ errorCode, url });\n\n    super({ message: errorMessage, code });\n\n    this.name = ERROR_NAMES.COPILOT_KIT_LOW_LEVEL_ERROR;\n  }\n}\n\n/**\n * Generic catch-all error handler for HTTP responses from the CopilotKit API where a status code is available.\n * Used when we receive an HTTP error status and wish to handle broad range of them\n *\n * This differs from CopilotKitLowLevelError in that:\n * - ResolvedCopilotKitError: Server was reached and returned an HTTP status\n * - CopilotKitLowLevelError: Error occurred before reaching server (e.g. network failure)\n *\n * @param status - The HTTP status code received from the API response\n * @param message - Optional error message to include\n * @param code - Optional specific CopilotKitErrorCode to override default behavior\n *\n * Default behavior:\n * - 400 Bad Request: Maps to CopilotKitApiDiscoveryError\n * - All other status codes: Maps to UNKNOWN error code if no specific code provided\n */\nexport class ResolvedCopilotKitError extends CopilotKitError {\n  constructor({\n    status,\n    message,\n    code,\n    isRemoteEndpoint,\n    url,\n  }: {\n    status: number;\n    message?: string;\n    code?: CopilotKitErrorCode;\n    isRemoteEndpoint?: boolean;\n    url?: string;\n  }) {\n    let resolvedCode = code;\n    if (!resolvedCode) {\n      switch (status) {\n        case 400:\n          throw new CopilotKitApiDiscoveryError({ message, url });\n        case 404:\n          throw isRemoteEndpoint\n            ? new CopilotKitRemoteEndpointDiscoveryError({ message, url })\n            : new CopilotKitApiDiscoveryError({ message, url });\n        default:\n          resolvedCode = CopilotKitErrorCode.UNKNOWN;\n          break;\n      }\n    }\n\n    super({ message, code: resolvedCode });\n    this.name = ERROR_NAMES.RESOLVED_COPILOT_KIT_ERROR;\n  }\n}\n\nexport class ConfigurationError extends CopilotKitError {\n  constructor(message: string) {\n    super({ message, code: CopilotKitErrorCode.CONFIGURATION_ERROR });\n    this.name = ERROR_NAMES.CONFIGURATION_ERROR;\n    this.severity = Severity.WARNING;\n  }\n}\n\nexport class MissingPublicApiKeyError extends ConfigurationError {\n  constructor(message: string) {\n    super(message);\n    this.name = ERROR_NAMES.MISSING_PUBLIC_API_KEY_ERROR;\n    this.severity = Severity.CRITICAL;\n  }\n}\n\nexport class UpgradeRequiredError extends ConfigurationError {\n  constructor(message: string) {\n    super(message);\n    this.name = ERROR_NAMES.UPGRADE_REQUIRED_ERROR;\n    this.severity = Severity.WARNING;\n  }\n}\n\n/**\n * Checks if an error is already a structured CopilotKit error.\n * This utility centralizes the logic for detecting structured errors across the codebase.\n *\n * @param error - The error to check\n * @returns true if the error is already structured, false otherwise\n */\nexport function isStructuredCopilotKitError(error: any): boolean {\n  return (\n    error instanceof CopilotKitError ||\n    error instanceof CopilotKitLowLevelError ||\n    (error?.name && error.name.includes(\"CopilotKit\")) ||\n    error?.extensions?.code !== undefined // Check if it has our structured error properties\n  );\n}\n\n/**\n * Returns the error as-is if it's already structured, otherwise converts it using the provided converter function.\n * This utility centralizes the pattern of preserving structured errors while converting unstructured ones.\n *\n * @param error - The error to process\n * @param converter - Function to convert unstructured errors to structured ones\n * @returns The structured error\n */\nexport function ensureStructuredError<T extends CopilotKitError>(\n  error: any,\n  converter: (error: any) => T,\n): T | any {\n  return isStructuredCopilotKitError(error) ? error : converter(error);\n}\n\ninterface VersionMismatchResponse {\n  runtimeVersion?: string;\n  runtimeClientGqlVersion: string;\n  reactCoreVersion: string;\n}\n\nexport async function getPossibleVersionMismatch({\n  runtimeVersion,\n  runtimeClientGqlVersion,\n}: {\n  runtimeVersion?: string;\n  runtimeClientGqlVersion: string;\n}) {\n  if (!runtimeVersion || runtimeVersion === \"\" || !runtimeClientGqlVersion) return;\n  if (\n    COPILOTKIT_VERSION !== runtimeVersion ||\n    COPILOTKIT_VERSION !== runtimeClientGqlVersion ||\n    runtimeVersion !== runtimeClientGqlVersion\n  ) {\n    return {\n      runtimeVersion,\n      runtimeClientGqlVersion,\n      reactCoreVersion: COPILOTKIT_VERSION,\n      message: getVersionMismatchErrorMessage({\n        runtimeVersion,\n        runtimeClientGqlVersion,\n        reactCoreVersion: COPILOTKIT_VERSION,\n      }),\n    };\n  }\n\n  return;\n}\n\nconst resolveLowLevelErrorMessage = ({ errorCode, url }: { errorCode?: string; url: string }) => {\n  const troubleshootingLink = ERROR_CONFIG[CopilotKitErrorCode.NETWORK_ERROR].troubleshootingUrl;\n  const genericMessage = (description = `Failed to fetch from url ${url}.`) => `${description}.\n\nPossible reasons:\n- -The server may have an error preventing it from returning a response (Check the server logs for more info).\n- -The server might be down or unreachable\n- -There might be a network issue (e.g., DNS failure, connection timeout) \n- -The URL might be incorrect\n- -The server is not running on the specified port\n\n${getSeeMoreMarkdown(troubleshootingLink)}`;\n\n  if (url.includes(\"/info\"))\n    return genericMessage(`Failed to fetch CopilotKit agents/action information from url ${url}.`);\n  if (url.includes(\"/actions/execute\"))\n    return genericMessage(`Fetch call to ${url} to execute actions failed.`);\n  if (url.includes(\"/agents/state\"))\n    return genericMessage(`Fetch call to ${url} to get agent state failed.`);\n  if (url.includes(\"/agents/execute\"))\n    return genericMessage(`Fetch call to ${url} to execute agent(s) failed.`);\n\n  switch (errorCode) {\n    case \"ECONNREFUSED\":\n      return `Connection to ${url} was refused. Ensure the server is running and accessible.\\n\\n${getSeeMoreMarkdown(troubleshootingLink)}`;\n    case \"ENOTFOUND\":\n      return `The server on ${url} could not be found. Check the URL or your network configuration.\\n\\n${getSeeMoreMarkdown(ERROR_CONFIG[CopilotKitErrorCode.NOT_FOUND].troubleshootingUrl)}`;\n    case \"ETIMEDOUT\":\n      return `The connection to ${url} timed out. The server might be overloaded or taking too long to respond.\\n\\n${getSeeMoreMarkdown(troubleshootingLink)}`;\n    default:\n      return;\n  }\n};\n","{\n  \"name\": \"@copilotkit/shared\",\n  \"private\": false,\n  \"homepage\": \"https://github.com/CopilotKit/CopilotKit\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/CopilotKit/CopilotKit.git\"\n  },\n  \"publishConfig\": {\n    \"access\": \"public\"\n  },\n  \"version\": \"1.9.3\",\n  \"sideEffects\": false,\n  \"main\": \"./dist/index.js\",\n  \"module\": \"./dist/index.mjs\",\n  \"exports\": {\n    \".\": {\n      \"import\": \"./dist/index.mjs\",\n      \"require\": \"./dist/index.js\",\n      \"types\": \"./dist/index.d.ts\"\n    }\n  },\n  \"types\": \"./dist/index.d.ts\",\n  \"license\": \"MIT\",\n  \"scripts\": {\n    \"build\": \"tsup --clean\",\n    \"dev\": \"tsup --watch --no-splitting\",\n    \"test\": \"jest --passWithNoTests\",\n    \"check-types\": \"tsc --noEmit\",\n    \"clean\": \"rm -rf .turbo && rm -rf node_modules && rm -rf dist && rm -rf .next\",\n    \"link:global\": \"pnpm link --global\",\n    \"unlink:global\": \"pnpm unlink --global\"\n  },\n  \"devDependencies\": {\n    \"@types/jest\": \"^29.5.4\",\n    \"@types/uuid\": \"^10.0.0\",\n    \"eslint\": \"^8.56.0\",\n    \"eslint-config-custom\": \"workspace:*\",\n    \"jest\": \"^29.6.4\",\n    \"ts-jest\": \"^29.1.1\",\n    \"tsconfig\": \"workspace:*\",\n    \"tsup\": \"^6.7.0\",\n    \"typescript\": \"^5.2.3\"\n  },\n  \"dependencies\": {\n    \"@segment/analytics-node\": \"^2.1.2\",\n    \"chalk\": \"4.1.2\",\n    \"graphql\": \"^16.8.1\",\n    \"uuid\": \"^10.0.0\",\n    \"zod\": \"^3.23.3\",\n    \"zod-to-json-schema\": \"^3.23.5\"\n  },\n  \"keywords\": [\n    \"copilotkit\",\n    \"copilot\",\n    \"react\",\n    \"nextjs\",\n    \"nodejs\",\n    \"ai\",\n    \"assistant\",\n    \"javascript\",\n    \"automation\",\n    \"textarea\"\n  ]\n}\n","export * from \"./types\";\nexport * from \"./utils\";\nexport * from \"./constants\";\nexport * from \"./telemetry\";\n\nimport * as packageJson from \"../package.json\";\nexport const COPILOTKIT_VERSION = packageJson.version;\n","import { z } from \"zod\";\nimport { Parameter } from \"../types\";\n\nexport type JSONSchemaString = {\n  type: \"string\";\n  description?: string;\n  enum?: string[];\n};\n\nexport type JSONSchemaNumber = {\n  type: \"number\";\n  description?: string;\n};\n\nexport type JSONSchemaBoolean = {\n  type: \"boolean\";\n  description?: string;\n};\n\nexport type JSONSchemaObject = {\n  type: \"object\";\n  properties?: Record<string, JSONSchema>;\n  required?: string[];\n  description?: string;\n};\n\nexport type JSONSchemaArray = {\n  type: \"array\";\n  items: JSONSchema;\n  description?: string;\n};\n\nexport type JSONSchema =\n  | JSONSchemaString\n  | JSONSchemaNumber\n  | JSONSchemaBoolean\n  | JSONSchemaObject\n  | JSONSchemaArray;\n\nexport function actionParametersToJsonSchema(actionParameters: Parameter[]): JSONSchema {\n  // Create the parameters object based on the argumentAnnotations\n  let parameters: { [key: string]: any } = {};\n  for (let parameter of actionParameters || []) {\n    parameters[parameter.name] = convertAttribute(parameter);\n  }\n\n  let requiredParameterNames: string[] = [];\n  for (let arg of actionParameters || []) {\n    if (arg.required !== false) {\n      requiredParameterNames.push(arg.name);\n    }\n  }\n\n  // Create the ChatCompletionFunctions object\n  return {\n    type: \"object\",\n    properties: parameters,\n    required: requiredParameterNames,\n  };\n}\n\n// Convert JSONSchema to Parameter[]\nexport function jsonSchemaToActionParameters(jsonSchema: JSONSchema): Parameter[] {\n  if (jsonSchema.type !== \"object\" || !jsonSchema.properties) {\n    return [];\n  }\n\n  const parameters: Parameter[] = [];\n  const requiredFields = jsonSchema.required || [];\n\n  for (const [name, schema] of Object.entries(jsonSchema.properties)) {\n    const parameter = convertJsonSchemaToParameter(name, schema, requiredFields.includes(name));\n    parameters.push(parameter);\n  }\n\n  return parameters;\n}\n\n// Convert JSONSchema property to Parameter\nfunction convertJsonSchemaToParameter(\n  name: string,\n  schema: JSONSchema,\n  isRequired: boolean,\n): Parameter {\n  const baseParameter: Parameter = {\n    name,\n    description: schema.description,\n  };\n\n  if (!isRequired) {\n    baseParameter.required = false;\n  }\n\n  switch (schema.type) {\n    case \"string\":\n      return {\n        ...baseParameter,\n        type: \"string\",\n        ...(schema.enum && { enum: schema.enum }),\n      };\n    case \"number\":\n    case \"boolean\":\n      return {\n        ...baseParameter,\n        type: schema.type,\n      };\n    case \"object\":\n      if (schema.properties) {\n        const attributes: Parameter[] = [];\n        const requiredFields = schema.required || [];\n\n        for (const [propName, propSchema] of Object.entries(schema.properties)) {\n          attributes.push(\n            convertJsonSchemaToParameter(propName, propSchema, requiredFields.includes(propName)),\n          );\n        }\n\n        return {\n          ...baseParameter,\n          type: \"object\",\n          attributes,\n        };\n      }\n      return {\n        ...baseParameter,\n        type: \"object\",\n      };\n    case \"array\":\n      if (schema.items.type === \"object\" && \"properties\" in schema.items) {\n        const attributes: Parameter[] = [];\n        const requiredFields = schema.items.required || [];\n\n        for (const [propName, propSchema] of Object.entries(schema.items.properties || {})) {\n          attributes.push(\n            convertJsonSchemaToParameter(propName, propSchema, requiredFields.includes(propName)),\n          );\n        }\n\n        return {\n          ...baseParameter,\n          type: \"object[]\",\n          attributes,\n        };\n      } else if (schema.items.type === \"array\") {\n        throw new Error(\"Nested arrays are not supported\");\n      } else {\n        return {\n          ...baseParameter,\n          type: `${schema.items.type}[]`,\n        };\n      }\n    default:\n      return {\n        ...baseParameter,\n        type: \"string\",\n      };\n  }\n}\n\nfunction convertAttribute(attribute: Parameter): JSONSchema {\n  switch (attribute.type) {\n    case \"string\":\n      return {\n        type: \"string\",\n        description: attribute.description,\n        ...(attribute.enum && { enum: attribute.enum }),\n      };\n    case \"number\":\n    case \"boolean\":\n      return {\n        type: attribute.type,\n        description: attribute.description,\n      };\n    case \"object\":\n    case \"object[]\":\n      const properties = attribute.attributes?.reduce(\n        (acc, attr) => {\n          acc[attr.name] = convertAttribute(attr);\n          return acc;\n        },\n        {} as Record<string, any>,\n      );\n      const required = attribute.attributes\n        ?.filter((attr) => attr.required !== false)\n        .map((attr) => attr.name);\n      if (attribute.type === \"object[]\") {\n        return {\n          type: \"array\",\n          items: {\n            type: \"object\",\n            ...(properties && { properties }),\n            ...(required && required.length > 0 && { required }),\n          },\n          description: attribute.description,\n        };\n      }\n      return {\n        type: \"object\",\n        description: attribute.description,\n        ...(properties && { properties }),\n        ...(required && required.length > 0 && { required }),\n      };\n    default:\n      // Handle arrays of primitive types and undefined attribute.type\n      if (attribute.type?.endsWith(\"[]\")) {\n        const itemType = attribute.type.slice(0, -2);\n        return {\n          type: \"array\",\n          items: { type: itemType as any },\n          description: attribute.description,\n        };\n      }\n      // Fallback for undefined type or any other unexpected type\n      return {\n        type: \"string\",\n        description: attribute.description,\n      };\n  }\n}\n\nexport function convertJsonSchemaToZodSchema(jsonSchema: any, required: boolean): z.ZodSchema {\n  if (jsonSchema.type === \"object\") {\n    const spec: { [key: string]: z.ZodSchema } = {};\n\n    if (!jsonSchema.properties || !Object.keys(jsonSchema.properties).length) {\n      return !required ? z.object(spec).optional() : z.object(spec);\n    }\n\n    for (const [key, value] of Object.entries(jsonSchema.properties)) {\n      spec[key] = convertJsonSchemaToZodSchema(\n        value,\n        jsonSchema.required ? jsonSchema.required.includes(key) : false,\n      );\n    }\n    let schema = z.object(spec).describe(jsonSchema.description);\n    return required ? schema : schema.optional();\n  } else if (jsonSchema.type === \"string\") {\n    let schema = z.string().describe(jsonSchema.description);\n    return required ? schema : schema.optional();\n  } else if (jsonSchema.type === \"number\") {\n    let schema = z.number().describe(jsonSchema.description);\n    return required ? schema : schema.optional();\n  } else if (jsonSchema.type === \"boolean\") {\n    let schema = z.boolean().describe(jsonSchema.description);\n    return required ? schema : schema.optional();\n  } else if (jsonSchema.type === \"array\") {\n    let itemSchema = convertJsonSchemaToZodSchema(jsonSchema.items, true);\n    let schema = z.array(itemSchema).describe(jsonSchema.description);\n    return required ? schema : schema.optional();\n  }\n  throw new Error(\"Invalid JSON schema\");\n}\n","import { v4 as uuidv4, validate, v5 as uuidv5 } from \"uuid\";\n\nexport function randomId() {\n  return \"ck-\" + uuidv4();\n}\n\nexport function randomUUID() {\n  return uuidv4();\n}\n\nexport function dataToUUID(input: string, namespace?: string): string {\n  const BASE_NAMESPACE = \"e4b01160-ff74-4c6e-9b27-d53cd930fe8e\";\n  // Since namespace needs to be a uuid, we are creating a uuid for it.\n  const boundNamespace = namespace ? uuidv5(namespace, BASE_NAMESPACE) : BASE_NAMESPACE;\n  return uuidv5(input, boundNamespace);\n}\n\nexport function isValidUUID(uuid: string) {\n  return validate(uuid);\n}\n"],"mappings":"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","names":["Severity","ErrorVisibility","CopilotKitErrorCode","uuidv4","uuidv5"]}