// package.json
var version = "1.9.3";

// src/telemetry/scarf-client.ts
var SCARF_BASE_URL = `https://copilotkit.gateway.scarf.sh/${version}`;
var ScarfClient = class {
  constructor() {
  }
  async logEvent(properties) {
    try {
      const controller = new AbortController();
      const timeoutId = setTimeout(() => controller.abort(), 3e3);
      const queryParams = new URLSearchParams();
      Object.entries(properties).forEach(([key, value]) => {
        if (value !== null && value !== void 0) {
          queryParams.append(key, String(value));
        }
      });
      const url = `${SCARF_BASE_URL}?${queryParams.toString()}`;
      const response = await fetch(url, {
        method: "GET",
        signal: controller.signal
      });
      clearTimeout(timeoutId);
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
    } catch {
    }
  }
};
var scarf_client_default = new ScarfClient();

export {
  version,
  scarf_client_default
};
//# sourceMappingURL=chunk-ZOL6IPXK.mjs.map